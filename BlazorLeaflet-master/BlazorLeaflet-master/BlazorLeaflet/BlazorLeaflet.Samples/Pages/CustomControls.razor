@page "/customcontrols"

@using BlazorLeaflet.Models
@using BlazorLeaflet.Models.Events
@inject IJSRuntime jsRuntime

<h1>Blazor Leaflet</h1>

<p>
    This page demos the ability to use custom Zoom In/Out buttons instead of
    Leaflet's built-in controls.
    <br />
    You can also hold <kbd>shift</kbd> to zoom faster.
</p>

<div class="btn-group mb-2" role="group">
    <button type="button" class="btn btn-secondary" @onclick="(e => _map?.ZoomIn(e))">Zoom in</button>
    <button type="button" class="btn btn-secondary" @onclick="(e => _map?.ZoomOut(e))">Zoom out</button>
</div>

<div style="height: 500px; width: 500px;">
    <LeafletMap Map="_map" />
</div>

@code
{
    private Map _map;
    private LatLng _markerLatLng = new LatLng { Lat = 47.5574007f, Lng = 16.3918687f };

    protected override void OnInitialized()
    {
        var marker = new Marker(_markerLatLng)
        {
            Draggable = true,
            Title = "Marker 1",
            Popup = new Popup { Content = string.Format("I am at {0:0.00}° lat, {1:0.00}° lng", _markerLatLng.Lat, _markerLatLng.Lng) },
            Tooltip = new Tooltip { Content = "Click and drag to move me" }
        };

        _map = new Map(jsRuntime)
        {
            Center = _markerLatLng,
            Zoom = 4.8f,
            ZoomControl = false
        };

        _map.OnInitialized += () =>
        {
            _map.AddLayer(new TileLayer
            {
                UrlTemplate = "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
                Attribution = "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
            });

            _map.AddLayer(marker);
        };
    }
}

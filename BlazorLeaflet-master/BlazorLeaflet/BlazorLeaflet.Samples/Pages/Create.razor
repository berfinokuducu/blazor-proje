@page "/create"
@layout CrudLayout
@using BlazorLeaflet.Samples.Data
@inject HotelServices service
@using BlazorLeaflet.Models
@using BlazorLeaflet.Models.Events
@inject IJSRuntime jsRuntime   
<h1 style="        color: #629338;
        margin-bottom: 2%;
        padding-left: 35%;
        background-color: #dfeaef;
">
    ADD NEW HOTEL
</h1>
<div class="row m-5" style="margin-left:10%">
    <div class="col-5  m-2 justify-content-start">
        <div class="p-3 mb-3  text-white text-center" style="background-color: #629338;">Add New Hotel</div>
        <EditForm Model="@NewHotel">
            <div class="form-group">
                <label for="name">NAME</label>
                <input type="text" id="name" class="form-control" @bind-value="@NewHotel.name" />
            </div>
            <div class="form-group">
                <label for="price">PHONE</label>
                <input type="text" id="price" class="form-control" @bind-value="@NewHotel.phone" />
            </div>
            <div class="form-group">
                <label for="Description">CITY</label>
                <input type="text" id="Description" class="form-control" @bind-value="@NewHotel.city" />
            </div>
            <div class="form-group">
                <label for="Description">DISTRICT</label>
                <input type="text" id="Description" class="form-control" @bind-value="@NewHotel.district" />
            </div>
            <div class="form-group">
                <label for="Description">STREET</label>
                <input type="text" id="Description" class="form-control" @bind-value="@NewHotel.street" />
            </div>
            <div class="form-group">
                <label for="quantity">NO</label>
                <input type="text" id="quantity" class="form-control" @bind="@NewHotel.No" />
            </div>
            <div class="form-group">
                <label for="quantity">ACTIVITY AREA</label>
                <input type="text" id="quantity" class="form-control" @bind-value="@NewHotel.activity_area" />
            </div>
            <div class="form-group">
                <label for="quantity">IMAGE SOURCE</label>
                <input type="text" id="quantity" class="form-control" @bind-value="@NewHotel.image" />
            </div>
            <div class="form-group">
                <label for="Description">Longitude</label>
                <input type="text" id="Description" class="form-control" @bind="@NewHotel.Longitude" />
            </div>
            <div class="form-group">
                <label for="Description">Latitude</label>
                <input type="text" id="Description" class="form-control" @bind="@NewHotel.Latitude" /> 
            </div>
            <div class="text-center p-3 mb-3">
                <SfButton CssClass="e-btn e-outline e-success" @onclick="AddNewHotel">Add Hotel</SfButton>
            </div>
        </EditForm>
    </div>
</div>
<div style="        
        height: 500px;
        width: 500px;
        margin-left: 52%;
        margin-top: -66%;
        margin-bottom: 30%;
    
">
    <p style="color: #629338;">Otel Konumunu Harita Üzerinden Seçebilirsiniz...</p>
    <LeafletMap Map="_map" />
</div>


@code {
    List<Hotels> Hotel = new List<Hotels>();
    public Hotels NewHotel { get; set; } = new Hotels();
    private async Task RefreshHotel()
    {
        Hotel = await service.GetHotelAsync();
    }
    private async Task AddNewHotel()
    {
        await service.AddHotelAsync(NewHotel);
        NewHotel = new Hotels();
        await RefreshHotel();
    }
    private Map _map;
    private DrawHandler _drawHandler;
    private LatLng _markerLatLng = new LatLng { Lat = 47.5574007f, Lng = 16.3918687f };

    protected override void OnInitialized()
    {
        var marker = new Marker(_markerLatLng)
        {
            Draggable = true,
            Title = "Marker 1",
            Popup = new Popup { Content = string.Format("I am at {0:0.00}° lat, {1:0.00}° lng", _markerLatLng.Lat, _markerLatLng.Lng) },
            Tooltip = new Tooltip { Content = "Click and drag to move me" }
        };

        _map = new Map(jsRuntime)
        {
            Center = _markerLatLng,
            Zoom = 4.8f
        };

        _map.OnInitialized += () =>
        {
            _map.AddLayer(new TileLayer
            {
                UrlTemplate = "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
                Attribution = "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
            });

            _map.AddLayer(marker);
        };

        _drawHandler = new DrawHandler(_map, jsRuntime);

        marker.OnMove += OnDrag;
        marker.OnMoveEnd += OnDragEnd;
    }

    private void OnDrag(Marker marker, DragEvent evt)
    {
        _markerLatLng = evt.LatLng;
        StateHasChanged();
        NewHotel.Latitude = _markerLatLng.Lat;
        NewHotel.Longitude = _markerLatLng.Lng;
    }

    private async void OnDragEnd(Marker marker, Event e)
    {
        marker.Position = _markerLatLng;
        marker.Popup.Content = string.Format("I am now at {0:0.00}° lat, {1:0.00}° lng", _markerLatLng.Lat, _markerLatLng.Lng);
        await LeafletInterops.UpdatePopupContent(jsRuntime, _map.Id, marker);


    }

}
